var all_book_type_list;
var first_book_type;
var secound_book_type;
var get_book_data_type = {
    first_type: "",
    secound_type: "",
    third_type: "",
    status_type: ""
};
var all_book_type_detail_list;
var get_book_list = {
    'free_type':"",
    'category':"",
    'book_status':"",
    'page':""
}
var setSexNum;
var getTheValue;
//init
$(function () {
    // 返回首页时带上进来的性别
    setIndexSex();
    //根据url路径，然后根据路径判断目前的页面
    //分类 | 排行 | 全本 | 新书
    setInitInfo();
    //所有事件
    event();
});

function setInitInfo() {
    var pageType = window.document.location.pathname;
    var sex = getUrlParam('sex');
    var getBookType;
    var getBookApiUli;
    switch (pageType) {
        case "/app/rank":
            changeTitle("排行榜");
            getBookType = "排行榜";
            getBookApiUli = sex === 'man' ? get_book_data_url_rank_man : getBookDataUrl_rank_woman;
            RemainMainnode('.navigatorCont');
            getBookData(getBookApiUli);
            break;
        case "/app/classification":
            changeTitle("分类");
            getBookType = "分类";
            getBookApiUli = sex === 'man' ? getBookDataUrl_classification_man : getBookDataUrl_classification_man;
            // getBookData(getBookApiUli);
            getBlockType();
            setTimeout(function () {           
                RemainMainnode('.classifyContextend');
                getBlockBookList();
            }, 300);
            break;
        case "/app/new":
            changeTitle("新书专区");
            getBookType = "新书专区";
            getBookApiUli = sex === 'man' ? get_book_data_url_new_man : getBookDataUrl_new_woman;
            getBookData(getBookApiUli);
            RemainMainnode('.navigatorCont');
            setTimeout(function () {
                RemainMainnode('.bookBlockBox .readingMore');
                RemainMainnode('.bookBlockBox>.Block:nth-child(2)>.blockHeader');
                RemainMainnode('.footer');
                overLook();
                removeMore();
            }, 300);
            break;
        case "/app/end":
            changeTitle("全本专区");
            getBookType = "全本专区";
            getBookApiUli = sex === 'man' ? get_book_data_url_end_man : getBookDataUrl_end_woman;
            RemainMainnode('.classifyCont');
            getBookData(getBookApiUli);
            setTimeout(function () {
                RemainMainnode('.bookBlockBox .readingMore');
                RemainMainnode('.footer');
                overLook();
                removeMore();
            }, 300);
            break;
        case "/app/search":
            GetUrlRelativePath(param = '/search');
            break;
    }
    $(".searchTitle").html(getBookType);
}

//获取书本类型
function getBlockType() {
    httpApi({
        url: get_book_type_url,
        type: 'get',
        fun: function (res) {
            if(res.code == 1){
                all_book_type_list = res.data;
                //插入类名
                changeSpan();
                //渲染书本类
                bookTypeRender();
                // console.log(all_book_type_list);
            }
        },
        params: getUrlParam("sex") === 'man' ? {
            free_type: 1
        } : {
            free_type: 2
        }
    });
}
//获取筛选书籍
function getBlockBookList(){
    var getSex = getUrlParam('sex');
    var setSexNum = getSex === 'man' ? setSexNum = 1 : setSexNum = 2;
    // console.log(get_book_data_type.status_type,setSexNum,getTheValue,'--',all_book_type_list.category)
    httpApi({
        url:get_book_filter_url,
        type:'get',
        fun:function(res){
            all_book_type_detail_list = res.data;
            // console.log(res,all_book_type_detail_list);
            AllbookListRender(all_book_type_detail_list);
        },
        params:{
            'free_type': setSexNum,
            'category':getTheValue,
            'book_status':get_book_data_type.status_type,
            'page':1
        }

    });
};
//书籍列表渲染(分男女频)
function AllbookListRender(list){
    $('.continueReading').html('');
    $.each(list,function(index,item){
        var $dom = $("" +
        "<div class='PortraitContent'>" +
        "<div>" +
        "    <a href='/book/" + item.id + "'>" +
        "        <img class='PortraitContentListImg' src='" + item.cover_url + "'/>" +
        "        <div class='PortraitContentListTitle'>" +
        "            <div>" + item.name + "</div>" +
        "            <div>" + item.author.name + "</div>" +
        "            <p class='ContentListTitlePage'>" + item.intro + "</p>" +
        "            <div class='PortraitFooterBtn'><span>" + item.category + "</span><span>" + item.sub_category + "</span></div>" +
        "        </div>" +
        "        <a class='Right_position' href='/book/" + item.id + "'><span>立即阅读</span></a>" +
        "    </a>" +
        "</div>" +
        "</div>");
        $dom.appendTo('.continueReading')
    });
  
}

function bookTypeRender() {
    bookStatusTypeRender(all_book_type_list.book_status);//书本状态渲染
    get_book_data_type.status_type = all_book_type_list.book_status[0].id;
    if (all_book_type_list.category) {
        firstDataTypeRender(all_book_type_list.category);
        get_book_data_type.first_type = all_book_type_list.category[0].id;
        return;
    }
    if (all_book_type_list.category[0].children) {
        secoundDataTypeRender(all_book_type_list.category[0].children);
        get_book_data_type.secound_type = all_book_type_list.category[0].children.id;
        return;
    };
    if (all_book_type_list.category[0].children[0].children) {
        thirdDataTypeRender(all_book_type_list.category[0].children[0].children);
        get_book_data_type.third_type = all_book_type_list.category[0].children[0].children[0].id;
        return;
    };
}

//第一层渲染
function firstDataTypeRender(list) {
    $.each(list, function (index, item) {
        var $dom = $(`<div class="${index===0?'cur':''}" data-first="${index}" data-first_id="${item.id}"><span>${item.name}</span></div>`);
        $dom.appendTo($(".classifyCont[data-type='0']").find(".classifyCont_content"));
    });
}

//第二层渲染
function secoundDataTypeRender(list) {
    $(".classifyCont[data-type='1']").find(".classifyCont_content").html("");
    $.each(list, function (index, item) {
        var $dom = $(`<div class="${index===0?'cur':''}" data-secound_id="${item.id}" data-secound="${index}"><span>${item.name}</span></div>`);
        $dom.appendTo($(".classifyCont[data-type='1']").find(".classifyCont_content"));
    });
}

//第三层渲染
function thirdDataTypeRender(list) {
    $(".classifyCont[data-type='2']").find(".classifyCont_content").html("");
    $.each(list, function (index, item) {
        var $dom = $(`<div class="${index===0?'cur':''}" data-third_id="${item.id}" data-third="${index}"><span>${item.name}</span></div>`);
        $dom.appendTo($(".classifyCont[data-type='2']").find(".classifyCont_content"));
    });
}

//书本状态渲染
function bookStatusTypeRender(list) {
    $(".book_status").find(".classifyCont_content").html("");
    $.each(list, function (index, item) {
        var $dom = $(`<div class="${index===0?'cur':''}" data-status_id="${item.id}"><span>${item.name}</span></div>`);
        $dom.appendTo($(".book_status").find(".classifyCont_content"));
    });
}
//封装方法(去掉多余节点)
//移除main内容节点
function RemainMainnode(param) {
    $(param).remove();
}

//去除按钮排跟内容移除处理
function removeMore() {
    $('.PortraitFooterBtn').remove();
    $('.ContentListTitlePage').css({
        'height': '24vw',
        'white-space': 'wrap'
    })
}

function event() {
    $html = $('html');
    //第一层筛选
    $html.on("tap", ".classifyCont[data-type='0']>.classifyCont_content>div", function () {
        $(".classifyCont[data-type='1']").find(".classifyCont_content").html('');
        get_book_data_type.first_type = $(this).data('first_id');
        $(this).addClass('cur').siblings().removeClass('cur');
        $first = $(this).data("first");
        getTheValue = all_book_type_list.category[$first].id;
        // console.log(getTheValue,'333')
        getBlockBookList();
        first_book_type = $first;
        if (all_book_type_list.category[$first].children) {
            secoundDataTypeRender(all_book_type_list.category[$first].children);
        }
    });

    //第二层筛选
    $html.on('tap', ".classifyCont[data-type='1']>.classifyCont_content>div", function () {
        $(".classifyCont[data-type='1']").find(".classifyCont_content").html('');
        get_book_data_type.secound_type = $(this).data('secound_id');
        $(this).addClass('cur').siblings().removeClass('cur');
        $secound = $(this).data("secound");
        secound_book_type = $secound;
        thirdDataTypeRender(all_book_type_list.category[$first].children[$secound].children);
    });

    //第三层赛选
    $html.on('tap', '.cur_2>div', function () {
        get_book_data_type.third_type = $(this).data('third_id');
        $(this).addClass('cur').siblings().removeClass('cur');
    });

    //书本状态赛选
    $html.on('tap', '.book_status>.classifyCont_content>div', function () {
        $(this).addClass('cur').siblings().removeClass('cur');
        get_book_data_type.status_type = $(this).data('status_id');
        getBlockBookList();
    });
}


function changeSpan() {
    var book_type_name = ['分类'];
    $.each(book_type_name, function (index, item) {
        const $dom = $(`
            <div class="classifyCont" data-type="${index}">
                <div class="classifyCont_title">${item}：</div>
                <div class="classifyCont_content"> </div>
            </div>`);
        $dom.appendTo($(".navigatorCont"));
    });
    const $status_dom = $(`
            <div class="book_status" data-type="status">
                <div class="classifyCont_title">状态：</div>
                <div class="classifyCont_content"></div>
            </div>`);
    $status_dom.appendTo($(".navigatorCont"));
}

//改变title
function changeTitle(msg) {
    document.title = msg;
}

//添加数据加载完显示加载完
function overLook() {
    $(`<div class="overLook">都被你看光了~</div>`).appendTo($(".blockCont>.PortraitContent:last-child"));
}